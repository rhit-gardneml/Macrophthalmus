-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\commhdlQPSKTxRx\QPSK_Tx.vhd
-- Created: 2024-01-25 16:27:39
-- 
-- Generated by MATLAB 23.2, HDL Coder 23.2, and Simulink 23.2
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 1.30208e-07
-- Target subsystem base rate: 1.30208e-07
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        1.30208e-07
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- dataReady                     ce_out        1.30208e-07
-- dataOut_re                    ce_out        1.30208e-07
-- dataOut_im                    ce_out        1.30208e-07
-- txDiagBus_QPSKConstellationPoints_rece_out        1.30208e-07
-- txDiagBus_QPSKConstellationPoints_imce_out        1.30208e-07
-- txDiagBus_QPSKConstellationValidce_out        1.30208e-07
-- validOut                      ce_out        1.30208e-07
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: QPSK_Tx
-- Source Path: commhdlQPSKTxRx/QPSK Tx
-- Hierarchy Level: 0
-- Model version: 7.26
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY QPSK_Tx IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        dataIn                            :   IN    std_logic;
        validIn                           :   IN    std_logic;
        ce_out                            :   OUT   std_logic;
        dataReady                         :   OUT   std_logic;
        dataOut_re                        :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        dataOut_im                        :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        txDiagBus_QPSKConstellationPoints_re :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        txDiagBus_QPSKConstellationPoints_im :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        txDiagBus_QPSKConstellationValid  :   OUT   std_logic;
        validOut                          :   OUT   std_logic
        );
END QPSK_Tx;


ARCHITECTURE rtl OF QPSK_Tx IS

  -- Component Declarations
  COMPONENT Bit_Packetizer
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          dataIn                          :   IN    std_logic;
          validIn                         :   IN    std_logic;
          bitsOut                         :   OUT   std_logic;
          dataStart                       :   OUT   std_logic;
          dataEnd                         :   OUT   std_logic;
          bitsValid                       :   OUT   std_logic;
          dataReady                       :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT HDL_Data_Scrambler
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          dataIn                          :   IN    std_logic;
          startIn                         :   IN    std_logic;
          endIn                           :   IN    std_logic;
          validIn                         :   IN    std_logic;
          dataOut                         :   OUT   std_logic;
          validOut                        :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT QPSK_Modulator
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          dataIn                          :   IN    std_logic;
          validIn                         :   IN    std_logic;
          dataOut_re                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          dataOut_im                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          validOut                        :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT RRC_Transmit_Filter
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          dataIn_re                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          dataIn_im                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          validIn                         :   IN    std_logic;
          dataOut_re                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          dataOut_im                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          validOut                        :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : Bit_Packetizer
    USE ENTITY work.Bit_Packetizer(rtl);

  FOR ALL : HDL_Data_Scrambler
    USE ENTITY work.HDL_Data_Scrambler(rtl);

  FOR ALL : QPSK_Modulator
    USE ENTITY work.QPSK_Modulator(rtl);

  FOR ALL : RRC_Transmit_Filter
    USE ENTITY work.RRC_Transmit_Filter(rtl);

  -- Signals
  SIGNAL Bit_Packetizer_out1              : std_logic;
  SIGNAL Bit_Packetizer_out2              : std_logic;
  SIGNAL Bit_Packetizer_out3              : std_logic;
  SIGNAL Bit_Packetizer_out4              : std_logic;
  SIGNAL Bit_Packetizer_out5              : std_logic;
  SIGNAL HDL_Data_Scrambler_out1          : std_logic;
  SIGNAL HDL_Data_Scrambler_out2          : std_logic;
  SIGNAL QPSKConstellationPoints_re       : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL QPSKConstellationPoints_im       : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL QPSKConstellationValid           : std_logic;
  SIGNAL RRC_Transmit_Filter_out1_re      : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL RRC_Transmit_Filter_out1_im      : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL RRC_Transmit_Filter_out2         : std_logic;

BEGIN
  u_Bit_Packetizer : Bit_Packetizer
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              dataIn => dataIn,
              validIn => validIn,
              bitsOut => Bit_Packetizer_out1,
              dataStart => Bit_Packetizer_out2,
              dataEnd => Bit_Packetizer_out3,
              bitsValid => Bit_Packetizer_out4,
              dataReady => Bit_Packetizer_out5
              );

  u_HDL_Data_Scrambler : HDL_Data_Scrambler
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              dataIn => Bit_Packetizer_out1,
              startIn => Bit_Packetizer_out2,
              endIn => Bit_Packetizer_out3,
              validIn => Bit_Packetizer_out4,
              dataOut => HDL_Data_Scrambler_out1,
              validOut => HDL_Data_Scrambler_out2
              );

  u_QPSK_Modulator : QPSK_Modulator
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              dataIn => HDL_Data_Scrambler_out1,
              validIn => HDL_Data_Scrambler_out2,
              dataOut_re => QPSKConstellationPoints_re,  -- sfix16_En15
              dataOut_im => QPSKConstellationPoints_im,  -- sfix16_En15
              validOut => QPSKConstellationValid
              );

  u_RRC_Transmit_Filter : RRC_Transmit_Filter
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              dataIn_re => QPSKConstellationPoints_re,  -- sfix16_En15
              dataIn_im => QPSKConstellationPoints_im,  -- sfix16_En15
              validIn => QPSKConstellationValid,
              dataOut_re => RRC_Transmit_Filter_out1_re,  -- sfix16_En14
              dataOut_im => RRC_Transmit_Filter_out1_im,  -- sfix16_En14
              validOut => RRC_Transmit_Filter_out2
              );

  ce_out <= clk_enable;

  dataReady <= Bit_Packetizer_out5;

  dataOut_re <= RRC_Transmit_Filter_out1_re;

  dataOut_im <= RRC_Transmit_Filter_out1_im;

  txDiagBus_QPSKConstellationPoints_re <= QPSKConstellationPoints_re;

  txDiagBus_QPSKConstellationPoints_im <= QPSKConstellationPoints_im;

  txDiagBus_QPSKConstellationValid <= QPSKConstellationValid;

  validOut <= RRC_Transmit_Filter_out2;

END rtl;

