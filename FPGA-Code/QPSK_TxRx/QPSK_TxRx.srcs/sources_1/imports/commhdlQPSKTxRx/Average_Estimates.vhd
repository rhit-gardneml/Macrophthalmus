-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\commhdlQPSKTxRx\Average_Estimates.vhd
-- Created: 2024-01-25 16:33:03
-- 
-- Generated by MATLAB 23.2, HDL Coder 23.2, and Simulink 23.2
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Average_Estimates
-- Source Path: commhdlQPSKTxRx/QPSK Rx/Frequency and Time Synchronizer/Phase Ambiguity Estimation and Correction/Average 
-- Estimate
-- Hierarchy Level: 3
-- Model version: 7.26
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY Average_Estimates IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        endIn                             :   IN    std_logic;
        estin_re                          :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En29
        estin_im                          :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En29
        validIn                           :   IN    std_logic;
        avgEst_re                         :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        avgEst_im                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En14
        );
END Average_Estimates;


ARCHITECTURE rtl OF Average_Estimates IS

  -- Signals
  SIGNAL Delay2_out1                      : std_logic;
  SIGNAL Delay1_out1                      : std_logic;
  SIGNAL Delay3_out1                      : std_logic;
  SIGNAL estin_re_signed                  : signed(31 DOWNTO 0);  -- sfix32_En29
  SIGNAL estin_im_signed                  : signed(31 DOWNTO 0);  -- sfix32_En29
  SIGNAL Delay_out1_re                    : signed(31 DOWNTO 0);  -- sfix32_En29
  SIGNAL Delay_out1_im                    : signed(31 DOWNTO 0);  -- sfix32_En29
  SIGNAL Data_Type_Conversion_out1_re     : signed(23 DOWNTO 0);  -- sfix24_En13
  SIGNAL Data_Type_Conversion_out1_im     : signed(23 DOWNTO 0);  -- sfix24_En13
  SIGNAL Unit_Delay_Enabled_Resettable_Synchronous_out1_re : signed(23 DOWNTO 0);  -- sfix24_En13
  SIGNAL Unit_Delay_Enabled_Resettable_Synchronous_out1_im : signed(23 DOWNTO 0);  -- sfix24_En13
  SIGNAL Add_add_cast                     : signed(24 DOWNTO 0);  -- sfix25_En13
  SIGNAL Add_add_cast_1                   : signed(24 DOWNTO 0);  -- sfix25_En13
  SIGNAL Add_add_cast_2                   : signed(24 DOWNTO 0);  -- sfix25_En13
  SIGNAL Add_add_cast_3                   : signed(24 DOWNTO 0);  -- sfix25_En13
  SIGNAL Add_out1_re                      : signed(24 DOWNTO 0);  -- sfix25_En13
  SIGNAL Add_out1_im                      : signed(24 DOWNTO 0);  -- sfix25_En13
  SIGNAL Data_Type_Conversion1_out1_re    : signed(23 DOWNTO 0);  -- sfix24_En13
  SIGNAL Data_Type_Conversion1_out1_im    : signed(23 DOWNTO 0);  -- sfix24_En13
  SIGNAL Divide_by_8_out1_re              : signed(23 DOWNTO 0);  -- sfix24_En16
  SIGNAL Divide_by_8_out1_im              : signed(23 DOWNTO 0);  -- sfix24_En16
  SIGNAL Unit_Delay_Enabled_Synchronous_out1_re : signed(23 DOWNTO 0);  -- sfix24_En16
  SIGNAL Unit_Delay_Enabled_Synchronous_out1_im : signed(23 DOWNTO 0);  -- sfix24_En16
  SIGNAL Data_Type_Conversion2_out1_re    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Data_Type_Conversion2_out1_im    : signed(15 DOWNTO 0);  -- sfix16_En14

BEGIN
  Delay2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay2_out1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay2_out1 <= endIn;
      END IF;
    END IF;
  END PROCESS Delay2_process;


  Delay1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay1_out1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay1_out1 <= validIn;
      END IF;
    END IF;
  END PROCESS Delay1_process;


  Delay3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay3_out1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay3_out1 <= Delay2_out1;
      END IF;
    END IF;
  END PROCESS Delay3_process;


  estin_re_signed <= signed(estin_re);

  estin_im_signed <= signed(estin_im);

  Delay_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay_out1_re <= to_signed(0, 32);
      Delay_out1_im <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay_out1_re <= estin_re_signed;
        Delay_out1_im <= estin_im_signed;
      END IF;
    END IF;
  END PROCESS Delay_process;


  Data_Type_Conversion_out1_re <= resize(Delay_out1_re(31 DOWNTO 16), 24);
  Data_Type_Conversion_out1_im <= resize(Delay_out1_im(31 DOWNTO 16), 24);

  Add_add_cast <= resize(Unit_Delay_Enabled_Resettable_Synchronous_out1_re, 25);
  Add_add_cast_1 <= resize(Data_Type_Conversion_out1_re, 25);
  Add_out1_re <= Add_add_cast + Add_add_cast_1;
  Add_add_cast_2 <= resize(Unit_Delay_Enabled_Resettable_Synchronous_out1_im, 25);
  Add_add_cast_3 <= resize(Data_Type_Conversion_out1_im, 25);
  Add_out1_im <= Add_add_cast_2 + Add_add_cast_3;

  Data_Type_Conversion1_out1_re <= Add_out1_re(23 DOWNTO 0);
  Data_Type_Conversion1_out1_im <= Add_out1_im(23 DOWNTO 0);

  Unit_Delay_Enabled_Resettable_Synchronous_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Unit_Delay_Enabled_Resettable_Synchronous_out1_re <= to_signed(16#000000#, 24);
      Unit_Delay_Enabled_Resettable_Synchronous_out1_im <= to_signed(16#000000#, 24);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF Delay3_out1 = '1' THEN
          Unit_Delay_Enabled_Resettable_Synchronous_out1_re <= to_signed(16#000000#, 24);
          Unit_Delay_Enabled_Resettable_Synchronous_out1_im <= to_signed(16#000000#, 24);
        ELSIF Delay1_out1 = '1' THEN
          Unit_Delay_Enabled_Resettable_Synchronous_out1_re <= Data_Type_Conversion1_out1_re;
          Unit_Delay_Enabled_Resettable_Synchronous_out1_im <= Data_Type_Conversion1_out1_im;
        END IF;
      END IF;
    END IF;
  END PROCESS Unit_Delay_Enabled_Resettable_Synchronous_process;


  Divide_by_8_out1_re <= Unit_Delay_Enabled_Resettable_Synchronous_out1_re;
  Divide_by_8_out1_im <= Unit_Delay_Enabled_Resettable_Synchronous_out1_im;

  Unit_Delay_Enabled_Synchronous_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Unit_Delay_Enabled_Synchronous_out1_re <= to_signed(16#000000#, 24);
      Unit_Delay_Enabled_Synchronous_out1_im <= to_signed(16#000000#, 24);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND Delay2_out1 = '1' THEN
        Unit_Delay_Enabled_Synchronous_out1_re <= Divide_by_8_out1_re;
        Unit_Delay_Enabled_Synchronous_out1_im <= Divide_by_8_out1_im;
      END IF;
    END IF;
  END PROCESS Unit_Delay_Enabled_Synchronous_process;


  Data_Type_Conversion2_out1_re <= Unit_Delay_Enabled_Synchronous_out1_re(17 DOWNTO 2);
  Data_Type_Conversion2_out1_im <= Unit_Delay_Enabled_Synchronous_out1_im(17 DOWNTO 2);

  avgEst_re <= std_logic_vector(Data_Type_Conversion2_out1_re);

  avgEst_im <= std_logic_vector(Data_Type_Conversion2_out1_im);

END rtl;

