-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\commhdlQPSKTxRx\Preamble_Bits_Store.vhd
-- Created: 2024-01-25 16:27:39
-- 
-- Generated by MATLAB 23.2, HDL Coder 23.2, and Simulink 23.2
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Preamble_Bits_Store
-- Source Path: commhdlQPSKTxRx/QPSK Tx/Bit Packetizer/Preamble Bits Generator/Preamble Bits Store
-- Hierarchy Level: 3
-- Model version: 7.26
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY Preamble_Bits_Store IS
  PORT( actualPreamble                    :   IN    std_logic;
        sampleCount                       :   IN    std_logic_vector(11 DOWNTO 0);  -- ufix12
        preamble                          :   OUT   std_logic
        );
END Preamble_Bits_Store;


ARCHITECTURE rtl OF Preamble_Bits_Store IS

  -- Constants
  CONSTANT Preamble_table_data            : std_logic_vector(31 DOWNTO 0) := 
    ('0', '0', '0', '0', '0', '0', '1', '1', '0', '0', '1', '1', '0', '0', '1', '1', '1', '1', '0', '0', '0', '0',
     '1', '1', '1', '1', '1', '1', '1', '1', '1', '1');  -- ufix1 [32]

  -- Signals
  SIGNAL Constant_out1                    : std_logic;
  SIGNAL sampleCount_unsigned             : unsigned(11 DOWNTO 0);  -- ufix12
  SIGNAL Extract_Bits_out1                : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Preamble_out1                    : std_logic;
  SIGNAL Switch_out1                      : std_logic;

BEGIN
  -- The Preamble is padded with zeros in the LUT such that
  -- the length is the 2^nextpow2(length(Preamble)) for 
  -- efficient resource mapping to RAM

  Constant_out1 <= '1';

  sampleCount_unsigned <= unsigned(sampleCount);

  Extract_Bits_out1 <= sampleCount_unsigned(4 DOWNTO 0);

  Preamble_out1 <= Preamble_table_data(to_integer(Extract_Bits_out1));

  
  Switch_out1 <= Constant_out1 WHEN actualPreamble = '0' ELSE
      Preamble_out1;

  preamble <= Switch_out1;

END rtl;

