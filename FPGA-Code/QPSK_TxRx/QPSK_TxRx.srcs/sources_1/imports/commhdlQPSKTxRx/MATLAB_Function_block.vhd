-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\commhdlQPSKTxRx\MATLAB_Function_block.vhd
-- Created: 2024-01-25 16:33:03
-- 
-- Generated by MATLAB 23.2, HDL Coder 23.2, and Simulink 23.2
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: MATLAB_Function_block
-- Source Path: commhdlQPSKTxRx/QPSK Rx/Frequency and Time Synchronizer/Preamble Detector/FIFO/Validate Input Push 
-- Pop/MATLAB Functio
-- Hierarchy Level: 5
-- Model version: 7.26
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY MATLAB_Function_block IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        rst                               :   IN    std_logic;
        enb_1                             :   IN    std_logic;
        dir                               :   IN    std_logic;
        count                             :   OUT   std_logic_vector(10 DOWNTO 0)  -- ufix11
        );
END MATLAB_Function_block;


ARCHITECTURE rtl OF MATLAB_Function_block IS

  -- Signals
  SIGNAL count_tmp                        : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL countReg                         : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL countReg_next                    : unsigned(10 DOWNTO 0);  -- ufix11

BEGIN
  MATLAB_Function_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      countReg <= to_unsigned(16#000#, 11);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        countReg <= countReg_next;
      END IF;
    END IF;
  END PROCESS MATLAB_Function_process;

  MATLAB_Function_output : PROCESS (countReg, dir, enb_1, rst)
    VARIABLE countReg_temp : unsigned(10 DOWNTO 0);
    VARIABLE sub_cast : unsigned(11 DOWNTO 0);
    VARIABLE sub_cast_0 : signed(12 DOWNTO 0);
    VARIABLE sub_temp : signed(12 DOWNTO 0);
    VARIABLE cast : unsigned(11 DOWNTO 0);
    VARIABLE add_temp : unsigned(11 DOWNTO 0);
  BEGIN
    sub_temp := to_signed(16#0000#, 13);
    add_temp := to_unsigned(16#000#, 12);
    sub_cast := to_unsigned(16#000#, 12);
    sub_cast_0 := to_signed(16#0000#, 13);
    cast := to_unsigned(16#000#, 12);
    countReg_temp := countReg;
    IF rst = '1' THEN 
      countReg_temp := to_unsigned(16#000#, 11);
    ELSIF enb_1 = '1' THEN 
      IF dir = '1' THEN 
        IF countReg = to_unsigned(16#46D#, 11) THEN 
          countReg_temp := to_unsigned(16#000#, 11);
        ELSE 
          add_temp := resize(countReg, 12) + to_unsigned(16#001#, 12);
          IF add_temp(11) /= '0' THEN 
            countReg_temp := "11111111111";
          ELSE 
            countReg_temp := add_temp(10 DOWNTO 0);
          END IF;
        END IF;
      ELSIF countReg = to_unsigned(16#000#, 11) THEN 
        countReg_temp := to_unsigned(16#46D#, 11);
      ELSE 
        sub_cast := resize(countReg, 12);
        sub_cast_0 := signed(resize(sub_cast, 13));
        sub_temp := sub_cast_0 - to_signed(16#0001#, 13);
        IF sub_temp(12) = '1' THEN 
          cast := "000000000000";
        ELSE 
          cast := unsigned(sub_temp(11 DOWNTO 0));
        END IF;
        IF cast(11) /= '0' THEN 
          countReg_temp := "11111111111";
        ELSE 
          countReg_temp := cast(10 DOWNTO 0);
        END IF;
      END IF;
    END IF;
    count_tmp <= countReg_temp;
    countReg_next <= countReg_temp;
  END PROCESS MATLAB_Function_output;


  count <= std_logic_vector(count_tmp);

END rtl;

