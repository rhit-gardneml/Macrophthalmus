-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\commhdlQPSKTxRx\Interpolation_Filter.vhd
-- Created: 2024-01-25 16:33:03
-- 
-- Generated by MATLAB 23.2, HDL Coder 23.2, and Simulink 23.2
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Interpolation_Filter
-- Source Path: commhdlQPSKTxRx/QPSK Rx/Frequency and Time Synchronizer/Symbol Synchronizer/Interpolation Filter
-- Hierarchy Level: 3
-- Model version: 7.26
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.QPSK_Rx_pkg.ALL;

ENTITY Interpolation_Filter IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        In_re                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En12
        In_im                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En12
        mu                                :   IN    std_logic_vector(10 DOWNTO 0);  -- sfix11_En10
        interpolant_re                    :   OUT   std_logic_vector(18 DOWNTO 0);  -- sfix19_En12
        interpolant_im                    :   OUT   std_logic_vector(18 DOWNTO 0)  -- sfix19_En12
        );
END Interpolation_Filter;


ARCHITECTURE rtl OF Interpolation_Filter IS

  -- Signals
  SIGNAL In_re_signed                     : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL In_im_signed                     : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Delay1_out1_re                   : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Delay1_out1_im                   : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Delay36_out1_re                  : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Delay36_out1_im                  : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Delay33_out1_re                  : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Delay33_out1_im                  : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Delay10_out1_re                  : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Delay10_out1_im                  : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Delay23_out1_re                  : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Delay23_out1_im                  : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Delay28_out1_re                  : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Delay28_out1_im                  : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Delay18_reg_re                   : vector_of_signed16(0 TO 1);  -- sfix16_En12 [2]
  SIGNAL Delay18_reg_im                   : vector_of_signed16(0 TO 1);  -- sfix16_En12 [2]
  SIGNAL Delay18_out1_re                  : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Delay18_out1_im                  : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Delay12_reg_re                   : vector_of_signed16(0 TO 1);  -- sfix16_En12 [2]
  SIGNAL Delay12_reg_im                   : vector_of_signed16(0 TO 1);  -- sfix16_En12 [2]
  SIGNAL Delay12_out1_re                  : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Delay12_out1_im                  : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Delay8_reg_re                    : vector_of_signed16(0 TO 1);  -- sfix16_En12 [2]
  SIGNAL Delay8_reg_im                    : vector_of_signed16(0 TO 1);  -- sfix16_En12 [2]
  SIGNAL Delay8_out1_re                   : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Delay8_out1_im                   : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Delay5_reg_re                    : vector_of_signed16(0 TO 1);  -- sfix16_En12 [2]
  SIGNAL Delay5_reg_im                    : vector_of_signed16(0 TO 1);  -- sfix16_En12 [2]
  SIGNAL Delay5_out1_re                   : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Delay5_out1_im                   : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL divide_by_2_out1_re              : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL divide_by_2_out1_im              : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Delay35_out1_re                  : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Delay35_out1_im                  : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Sum9_sub_cast                    : signed(16 DOWNTO 0);  -- sfix17_En12
  SIGNAL Sum9_sub_cast_1                  : signed(16 DOWNTO 0);  -- sfix17_En12
  SIGNAL Sum9_sub_cast_2                  : signed(16 DOWNTO 0);  -- sfix17_En12
  SIGNAL Sum9_sub_cast_3                  : signed(16 DOWNTO 0);  -- sfix17_En12
  SIGNAL Sum9_out1_re                     : signed(16 DOWNTO 0);  -- sfix17_En12
  SIGNAL Sum9_out1_im                     : signed(16 DOWNTO 0);  -- sfix17_En12
  SIGNAL Delay32_out1_re                  : signed(16 DOWNTO 0);  -- sfix17_En12
  SIGNAL Delay32_out1_im                  : signed(16 DOWNTO 0);  -- sfix17_En12
  SIGNAL Delay2_out1_re                   : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Delay2_out1_im                   : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Delay31_out1_re                  : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Delay31_out1_im                  : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Sum10_add_cast                   : signed(17 DOWNTO 0);  -- sfix18_En12
  SIGNAL Sum10_add_cast_1                 : signed(17 DOWNTO 0);  -- sfix18_En12
  SIGNAL Sum10_add_cast_2                 : signed(17 DOWNTO 0);  -- sfix18_En12
  SIGNAL Sum10_add_cast_3                 : signed(17 DOWNTO 0);  -- sfix18_En12
  SIGNAL Sum10_out1_re                    : signed(17 DOWNTO 0);  -- sfix18_En12
  SIGNAL Sum10_out1_im                    : signed(17 DOWNTO 0);  -- sfix18_En12
  SIGNAL Delay22_out1_re                  : signed(17 DOWNTO 0);  -- sfix18_En12
  SIGNAL Delay22_out1_im                  : signed(17 DOWNTO 0);  -- sfix18_En12
  SIGNAL Delay3_out1_re                   : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Delay3_out1_im                   : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Delay21_out1_re                  : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Delay21_out1_im                  : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Sum4_sub_cast                    : signed(18 DOWNTO 0);  -- sfix19_En12
  SIGNAL Sum4_sub_cast_1                  : signed(18 DOWNTO 0);  -- sfix19_En12
  SIGNAL Sum4_sub_cast_2                  : signed(18 DOWNTO 0);  -- sfix19_En12
  SIGNAL Sum4_sub_cast_3                  : signed(18 DOWNTO 0);  -- sfix19_En12
  SIGNAL Sum4_out1_re                     : signed(18 DOWNTO 0);  -- sfix19_En12
  SIGNAL Sum4_out1_im                     : signed(18 DOWNTO 0);  -- sfix19_En12
  SIGNAL Delay27_out1_re                  : signed(18 DOWNTO 0);  -- sfix19_En12
  SIGNAL Delay27_out1_im                  : signed(18 DOWNTO 0);  -- sfix19_En12
  SIGNAL Delay17_reg_re                   : vector_of_signed19(0 TO 1);  -- sfix19_En12 [2]
  SIGNAL Delay17_reg_im                   : vector_of_signed19(0 TO 1);  -- sfix19_En12 [2]
  SIGNAL Delay17_out1_re                  : signed(18 DOWNTO 0);  -- sfix19_En12
  SIGNAL Delay17_out1_im                  : signed(18 DOWNTO 0);  -- sfix19_En12
  SIGNAL Delay4_out1_re                   : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Delay4_out1_im                   : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Delay26_out1_re                  : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Delay26_out1_im                  : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Delay16_reg_re                   : vector_of_signed16(0 TO 1);  -- sfix16_En12 [2]
  SIGNAL Delay16_reg_im                   : vector_of_signed16(0 TO 1);  -- sfix16_En12 [2]
  SIGNAL Delay16_out1_re                  : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Delay16_out1_im                  : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Sum7_sub_cast                    : signed(19 DOWNTO 0);  -- sfix20_En12
  SIGNAL Sum7_sub_cast_1                  : signed(19 DOWNTO 0);  -- sfix20_En12
  SIGNAL Sum7_sub_temp                    : signed(19 DOWNTO 0);  -- sfix20_En12
  SIGNAL Sum7_sub_cast_2                  : signed(19 DOWNTO 0);  -- sfix20_En12
  SIGNAL Sum7_sub_cast_3                  : signed(19 DOWNTO 0);  -- sfix20_En12
  SIGNAL Sum7_sub_temp_1                  : signed(19 DOWNTO 0);  -- sfix20_En12
  SIGNAL Sum7_out1_re                     : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Sum7_out1_im                     : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Delay11_reg_re                   : vector_of_signed16(0 TO 1);  -- sfix16_En10 [2]
  SIGNAL Delay11_reg_im                   : vector_of_signed16(0 TO 1);  -- sfix16_En10 [2]
  SIGNAL Delay11_out1_re                  : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Delay11_out1_im                  : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Delay30_out1_re                  : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Delay30_out1_im                  : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Sum1_sub_cast                    : signed(16 DOWNTO 0);  -- sfix17_En12
  SIGNAL Sum1_sub_cast_1                  : signed(16 DOWNTO 0);  -- sfix17_En12
  SIGNAL Sum1_sub_cast_2                  : signed(16 DOWNTO 0);  -- sfix17_En12
  SIGNAL Sum1_sub_cast_3                  : signed(16 DOWNTO 0);  -- sfix17_En12
  SIGNAL Sum1_out1_re                     : signed(16 DOWNTO 0);  -- sfix17_En12
  SIGNAL Sum1_out1_im                     : signed(16 DOWNTO 0);  -- sfix17_En12
  SIGNAL Delay20_out1_re                  : signed(16 DOWNTO 0);  -- sfix17_En12
  SIGNAL Delay20_out1_im                  : signed(16 DOWNTO 0);  -- sfix17_En12
  SIGNAL Sum5_sub_cast                    : signed(17 DOWNTO 0);  -- sfix18_En12
  SIGNAL Sum5_sub_cast_1                  : signed(17 DOWNTO 0);  -- sfix18_En12
  SIGNAL Sum5_sub_cast_2                  : signed(17 DOWNTO 0);  -- sfix18_En12
  SIGNAL Sum5_sub_cast_3                  : signed(17 DOWNTO 0);  -- sfix18_En12
  SIGNAL Sum5_out1_re                     : signed(17 DOWNTO 0);  -- sfix18_En12
  SIGNAL Sum5_out1_im                     : signed(17 DOWNTO 0);  -- sfix18_En12
  SIGNAL Delay25_out1_re                  : signed(17 DOWNTO 0);  -- sfix18_En12
  SIGNAL Delay25_out1_im                  : signed(17 DOWNTO 0);  -- sfix18_En12
  SIGNAL Sum6_add_cast                    : signed(18 DOWNTO 0);  -- sfix19_En12
  SIGNAL Sum6_add_cast_1                  : signed(18 DOWNTO 0);  -- sfix19_En12
  SIGNAL Sum6_add_temp                    : signed(18 DOWNTO 0);  -- sfix19_En12
  SIGNAL Sum6_add_cast_2                  : signed(18 DOWNTO 0);  -- sfix19_En12
  SIGNAL Sum6_add_cast_3                  : signed(18 DOWNTO 0);  -- sfix19_En12
  SIGNAL Sum6_add_temp_1                  : signed(18 DOWNTO 0);  -- sfix19_En12
  SIGNAL Sum6_out1_re                     : signed(15 DOWNTO 0);  -- sfix16_En11
  SIGNAL Sum6_out1_im                     : signed(15 DOWNTO 0);  -- sfix16_En11
  SIGNAL Delay15_reg_re                   : vector_of_signed16(0 TO 1) := (OTHERS => to_signed(16#0000#, 16));  -- sfix16_En11 [2]
  SIGNAL Delay15_reg_im                   : vector_of_signed16(0 TO 1) := (OTHERS => to_signed(16#0000#, 16));  -- sfix16_En11 [2]
  SIGNAL Delay15_out1_re                  : signed(15 DOWNTO 0);  -- sfix16_En11
  SIGNAL Delay15_out1_im                  : signed(15 DOWNTO 0);  -- sfix16_En11
  SIGNAL mu_signed                        : signed(10 DOWNTO 0);  -- sfix11_En10
  SIGNAL Delay34_out1                     : signed(10 DOWNTO 0);  -- sfix11_En10
  SIGNAL Delay29_out1                     : signed(10 DOWNTO 0);  -- sfix11_En10
  SIGNAL Delay19_out1                     : signed(10 DOWNTO 0);  -- sfix11_En10
  SIGNAL Delay24_out1                     : signed(10 DOWNTO 0);  -- sfix11_En10
  SIGNAL Delay14_reg                      : vector_of_signed11(0 TO 1) := (OTHERS => to_signed(16#000#, 11));  -- sfix11 [2]
  SIGNAL Delay14_out1                     : signed(10 DOWNTO 0);  -- sfix11_En10
  SIGNAL Product1_mul_temp                : signed(26 DOWNTO 0);  -- sfix27_En21
  SIGNAL Product1_mul_temp_1              : signed(26 DOWNTO 0);  -- sfix27_En21
  SIGNAL Product1_out1_re                 : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Product1_out1_im                 : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Delay9_reg_re                    : vector_of_signed16(0 TO 1) := (OTHERS => to_signed(16#0000#, 16));  -- sfix16_En10 [2]
  SIGNAL Delay9_reg_im                    : vector_of_signed16(0 TO 1) := (OTHERS => to_signed(16#0000#, 16));  -- sfix16_En10 [2]
  SIGNAL Delay9_out1_re                   : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Delay9_out1_im                   : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Sum3_out1_re                     : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Sum3_out1_im                     : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Delay6_reg_re                    : vector_of_signed16(0 TO 1) := (OTHERS => to_signed(16#0000#, 16));  -- sfix16_En10 [2]
  SIGNAL Delay6_reg_im                    : vector_of_signed16(0 TO 1) := (OTHERS => to_signed(16#0000#, 16));  -- sfix16_En10 [2]
  SIGNAL Delay6_out1_re                   : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Delay6_out1_im                   : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Delay13_reg                      : vector_of_signed11(0 TO 1);  -- sfix11 [2]
  SIGNAL Delay13_out1                     : signed(10 DOWNTO 0);  -- sfix11_En10
  SIGNAL Delay7_reg                       : vector_of_signed11(0 TO 1) := (OTHERS => to_signed(16#000#, 11));  -- sfix11 [2]
  SIGNAL Delay7_out1                      : signed(10 DOWNTO 0);  -- sfix11_En10
  SIGNAL Product2_mul_temp                : signed(26 DOWNTO 0);  -- sfix27_En20
  SIGNAL Product2_mul_temp_1              : signed(26 DOWNTO 0);  -- sfix27_En20
  SIGNAL Product2_out1_re                 : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Product2_out1_im                 : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Delay_reg_re                     : vector_of_signed16(0 TO 1) := (OTHERS => to_signed(16#0000#, 16));  -- sfix16_En10 [2]
  SIGNAL Delay_reg_im                     : vector_of_signed16(0 TO 1) := (OTHERS => to_signed(16#0000#, 16));  -- sfix16_En10 [2]
  SIGNAL Delay_out1_re                    : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Delay_out1_im                    : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Sum2_add_cast                    : signed(18 DOWNTO 0);  -- sfix19_En12
  SIGNAL Sum2_add_cast_1                  : signed(18 DOWNTO 0);  -- sfix19_En12
  SIGNAL Sum2_add_cast_2                  : signed(18 DOWNTO 0);  -- sfix19_En12
  SIGNAL Sum2_add_cast_3                  : signed(18 DOWNTO 0);  -- sfix19_En12
  SIGNAL Sum2_out1_re                     : signed(18 DOWNTO 0);  -- sfix19_En12
  SIGNAL Sum2_out1_im                     : signed(18 DOWNTO 0);  -- sfix19_En12

BEGIN
  In_re_signed <= signed(In_re);

  In_im_signed <= signed(In_im);

  Delay1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay1_out1_re <= to_signed(16#0000#, 16);
      Delay1_out1_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay1_out1_re <= In_re_signed;
        Delay1_out1_im <= In_im_signed;
      END IF;
    END IF;
  END PROCESS Delay1_process;


  Delay36_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay36_out1_re <= to_signed(16#0000#, 16);
      Delay36_out1_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay36_out1_re <= Delay1_out1_re;
        Delay36_out1_im <= Delay1_out1_im;
      END IF;
    END IF;
  END PROCESS Delay36_process;


  Delay33_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay33_out1_re <= to_signed(16#0000#, 16);
      Delay33_out1_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay33_out1_re <= Delay36_out1_re;
        Delay33_out1_im <= Delay36_out1_im;
      END IF;
    END IF;
  END PROCESS Delay33_process;


  Delay10_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay10_out1_re <= to_signed(16#0000#, 16);
      Delay10_out1_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay10_out1_re <= Delay33_out1_re;
        Delay10_out1_im <= Delay33_out1_im;
      END IF;
    END IF;
  END PROCESS Delay10_process;


  Delay23_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay23_out1_re <= to_signed(16#0000#, 16);
      Delay23_out1_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay23_out1_re <= Delay10_out1_re;
        Delay23_out1_im <= Delay10_out1_im;
      END IF;
    END IF;
  END PROCESS Delay23_process;


  Delay28_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay28_out1_re <= to_signed(16#0000#, 16);
      Delay28_out1_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay28_out1_re <= Delay23_out1_re;
        Delay28_out1_im <= Delay23_out1_im;
      END IF;
    END IF;
  END PROCESS Delay28_process;


  Delay18_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay18_reg_re <= (OTHERS => to_signed(16#0000#, 16));
      Delay18_reg_im <= (OTHERS => to_signed(16#0000#, 16));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay18_reg_im(0) <= Delay28_out1_im;
        Delay18_reg_im(1) <= Delay18_reg_im(0);
        Delay18_reg_re(0) <= Delay28_out1_re;
        Delay18_reg_re(1) <= Delay18_reg_re(0);
      END IF;
    END IF;
  END PROCESS Delay18_process;

  Delay18_out1_re <= Delay18_reg_re(1);
  Delay18_out1_im <= Delay18_reg_im(1);

  Delay12_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay12_reg_re <= (OTHERS => to_signed(16#0000#, 16));
      Delay12_reg_im <= (OTHERS => to_signed(16#0000#, 16));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay12_reg_im(0) <= Delay18_out1_im;
        Delay12_reg_im(1) <= Delay12_reg_im(0);
        Delay12_reg_re(0) <= Delay18_out1_re;
        Delay12_reg_re(1) <= Delay12_reg_re(0);
      END IF;
    END IF;
  END PROCESS Delay12_process;

  Delay12_out1_re <= Delay12_reg_re(1);
  Delay12_out1_im <= Delay12_reg_im(1);

  Delay8_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay8_reg_re <= (OTHERS => to_signed(16#0000#, 16));
      Delay8_reg_im <= (OTHERS => to_signed(16#0000#, 16));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay8_reg_im(0) <= Delay12_out1_im;
        Delay8_reg_im(1) <= Delay8_reg_im(0);
        Delay8_reg_re(0) <= Delay12_out1_re;
        Delay8_reg_re(1) <= Delay8_reg_re(0);
      END IF;
    END IF;
  END PROCESS Delay8_process;

  Delay8_out1_re <= Delay8_reg_re(1);
  Delay8_out1_im <= Delay8_reg_im(1);

  Delay5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay5_reg_re <= (OTHERS => to_signed(16#0000#, 16));
      Delay5_reg_im <= (OTHERS => to_signed(16#0000#, 16));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay5_reg_im(0) <= Delay8_out1_im;
        Delay5_reg_im(1) <= Delay5_reg_im(0);
        Delay5_reg_re(0) <= Delay8_out1_re;
        Delay5_reg_re(1) <= Delay5_reg_re(0);
      END IF;
    END IF;
  END PROCESS Delay5_process;

  Delay5_out1_re <= Delay5_reg_re(1);
  Delay5_out1_im <= Delay5_reg_im(1);

  divide_by_2_out1_re <= SHIFT_RIGHT(In_re_signed, 1);
  divide_by_2_out1_im <= SHIFT_RIGHT(In_im_signed, 1);

  Delay35_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay35_out1_re <= to_signed(16#0000#, 16);
      Delay35_out1_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay35_out1_re <= divide_by_2_out1_re;
        Delay35_out1_im <= divide_by_2_out1_im;
      END IF;
    END IF;
  END PROCESS Delay35_process;


  Sum9_sub_cast <= resize(Delay36_out1_re, 17);
  Sum9_sub_cast_1 <= resize(Delay35_out1_re, 17);
  Sum9_out1_re <= Sum9_sub_cast - Sum9_sub_cast_1;
  Sum9_sub_cast_2 <= resize(Delay36_out1_im, 17);
  Sum9_sub_cast_3 <= resize(Delay35_out1_im, 17);
  Sum9_out1_im <= Sum9_sub_cast_2 - Sum9_sub_cast_3;

  Delay32_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay32_out1_re <= to_signed(16#00000#, 17);
      Delay32_out1_im <= to_signed(16#00000#, 17);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay32_out1_re <= Sum9_out1_re;
        Delay32_out1_im <= Sum9_out1_im;
      END IF;
    END IF;
  END PROCESS Delay32_process;


  Delay2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay2_out1_re <= to_signed(16#0000#, 16);
      Delay2_out1_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay2_out1_re <= Delay35_out1_re;
        Delay2_out1_im <= Delay35_out1_im;
      END IF;
    END IF;
  END PROCESS Delay2_process;


  Delay31_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay31_out1_re <= to_signed(16#0000#, 16);
      Delay31_out1_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay31_out1_re <= Delay2_out1_re;
        Delay31_out1_im <= Delay2_out1_im;
      END IF;
    END IF;
  END PROCESS Delay31_process;


  Sum10_add_cast <= resize(Delay32_out1_re, 18);
  Sum10_add_cast_1 <= resize(Delay31_out1_re, 18);
  Sum10_out1_re <= Sum10_add_cast + Sum10_add_cast_1;
  Sum10_add_cast_2 <= resize(Delay32_out1_im, 18);
  Sum10_add_cast_3 <= resize(Delay31_out1_im, 18);
  Sum10_out1_im <= Sum10_add_cast_2 + Sum10_add_cast_3;

  Delay22_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay22_out1_re <= to_signed(16#00000#, 18);
      Delay22_out1_im <= to_signed(16#00000#, 18);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay22_out1_re <= Sum10_out1_re;
        Delay22_out1_im <= Sum10_out1_im;
      END IF;
    END IF;
  END PROCESS Delay22_process;


  Delay3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay3_out1_re <= to_signed(16#0000#, 16);
      Delay3_out1_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay3_out1_re <= Delay31_out1_re;
        Delay3_out1_im <= Delay31_out1_im;
      END IF;
    END IF;
  END PROCESS Delay3_process;


  Delay21_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay21_out1_re <= to_signed(16#0000#, 16);
      Delay21_out1_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay21_out1_re <= Delay3_out1_re;
        Delay21_out1_im <= Delay3_out1_im;
      END IF;
    END IF;
  END PROCESS Delay21_process;


  Sum4_sub_cast <= resize(Delay22_out1_re, 19);
  Sum4_sub_cast_1 <= resize(Delay21_out1_re, 19);
  Sum4_out1_re <= Sum4_sub_cast - Sum4_sub_cast_1;
  Sum4_sub_cast_2 <= resize(Delay22_out1_im, 19);
  Sum4_sub_cast_3 <= resize(Delay21_out1_im, 19);
  Sum4_out1_im <= Sum4_sub_cast_2 - Sum4_sub_cast_3;

  Delay27_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay27_out1_re <= to_signed(16#00000#, 19);
      Delay27_out1_im <= to_signed(16#00000#, 19);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay27_out1_re <= Sum4_out1_re;
        Delay27_out1_im <= Sum4_out1_im;
      END IF;
    END IF;
  END PROCESS Delay27_process;


  Delay17_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay17_reg_re <= (OTHERS => to_signed(16#00000#, 19));
      Delay17_reg_im <= (OTHERS => to_signed(16#00000#, 19));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay17_reg_im(0) <= Delay27_out1_im;
        Delay17_reg_im(1) <= Delay17_reg_im(0);
        Delay17_reg_re(0) <= Delay27_out1_re;
        Delay17_reg_re(1) <= Delay17_reg_re(0);
      END IF;
    END IF;
  END PROCESS Delay17_process;

  Delay17_out1_re <= Delay17_reg_re(1);
  Delay17_out1_im <= Delay17_reg_im(1);

  Delay4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay4_out1_re <= to_signed(16#0000#, 16);
      Delay4_out1_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay4_out1_re <= Delay21_out1_re;
        Delay4_out1_im <= Delay21_out1_im;
      END IF;
    END IF;
  END PROCESS Delay4_process;


  Delay26_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay26_out1_re <= to_signed(16#0000#, 16);
      Delay26_out1_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay26_out1_re <= Delay4_out1_re;
        Delay26_out1_im <= Delay4_out1_im;
      END IF;
    END IF;
  END PROCESS Delay26_process;


  Delay16_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay16_reg_re <= (OTHERS => to_signed(16#0000#, 16));
      Delay16_reg_im <= (OTHERS => to_signed(16#0000#, 16));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay16_reg_im(0) <= Delay26_out1_im;
        Delay16_reg_im(1) <= Delay16_reg_im(0);
        Delay16_reg_re(0) <= Delay26_out1_re;
        Delay16_reg_re(1) <= Delay16_reg_re(0);
      END IF;
    END IF;
  END PROCESS Delay16_process;

  Delay16_out1_re <= Delay16_reg_re(1);
  Delay16_out1_im <= Delay16_reg_im(1);

  Sum7_sub_cast <= resize(Delay17_out1_re, 20);
  Sum7_sub_cast_1 <= resize(Delay16_out1_re, 20);
  Sum7_sub_temp <= Sum7_sub_cast - Sum7_sub_cast_1;
  Sum7_out1_re <= Sum7_sub_temp(17 DOWNTO 2);
  Sum7_sub_cast_2 <= resize(Delay17_out1_im, 20);
  Sum7_sub_cast_3 <= resize(Delay16_out1_im, 20);
  Sum7_sub_temp_1 <= Sum7_sub_cast_2 - Sum7_sub_cast_3;
  Sum7_out1_im <= Sum7_sub_temp_1(17 DOWNTO 2);

  Delay11_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay11_reg_re <= (OTHERS => to_signed(16#0000#, 16));
      Delay11_reg_im <= (OTHERS => to_signed(16#0000#, 16));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay11_reg_im(0) <= Sum7_out1_im;
        Delay11_reg_im(1) <= Delay11_reg_im(0);
        Delay11_reg_re(0) <= Sum7_out1_re;
        Delay11_reg_re(1) <= Delay11_reg_re(0);
      END IF;
    END IF;
  END PROCESS Delay11_process;

  Delay11_out1_re <= Delay11_reg_re(1);
  Delay11_out1_im <= Delay11_reg_im(1);

  Delay30_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay30_out1_re <= to_signed(16#0000#, 16);
      Delay30_out1_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay30_out1_re <= Delay35_out1_re;
        Delay30_out1_im <= Delay35_out1_im;
      END IF;
    END IF;
  END PROCESS Delay30_process;


  Sum1_sub_cast <= resize(Delay30_out1_re, 17);
  Sum1_sub_cast_1 <= resize(Delay31_out1_re, 17);
  Sum1_out1_re <= Sum1_sub_cast - Sum1_sub_cast_1;
  Sum1_sub_cast_2 <= resize(Delay30_out1_im, 17);
  Sum1_sub_cast_3 <= resize(Delay31_out1_im, 17);
  Sum1_out1_im <= Sum1_sub_cast_2 - Sum1_sub_cast_3;

  Delay20_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay20_out1_re <= to_signed(16#00000#, 17);
      Delay20_out1_im <= to_signed(16#00000#, 17);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay20_out1_re <= Sum1_out1_re;
        Delay20_out1_im <= Sum1_out1_im;
      END IF;
    END IF;
  END PROCESS Delay20_process;


  Sum5_sub_cast <= resize(Delay20_out1_re, 18);
  Sum5_sub_cast_1 <= resize(Delay21_out1_re, 18);
  Sum5_out1_re <= Sum5_sub_cast - Sum5_sub_cast_1;
  Sum5_sub_cast_2 <= resize(Delay20_out1_im, 18);
  Sum5_sub_cast_3 <= resize(Delay21_out1_im, 18);
  Sum5_out1_im <= Sum5_sub_cast_2 - Sum5_sub_cast_3;

  Delay25_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay25_out1_re <= to_signed(16#00000#, 18);
      Delay25_out1_im <= to_signed(16#00000#, 18);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay25_out1_re <= Sum5_out1_re;
        Delay25_out1_im <= Sum5_out1_im;
      END IF;
    END IF;
  END PROCESS Delay25_process;


  Sum6_add_cast <= resize(Delay26_out1_re, 19);
  Sum6_add_cast_1 <= resize(Delay25_out1_re, 19);
  Sum6_add_temp <= Sum6_add_cast + Sum6_add_cast_1;
  
  Sum6_out1_re <= X"7FFF" WHEN (Sum6_add_temp(18) = '0') AND (Sum6_add_temp(17 DOWNTO 16) /= "00") ELSE
      X"8000" WHEN (Sum6_add_temp(18) = '1') AND (Sum6_add_temp(17 DOWNTO 16) /= "11") ELSE
      Sum6_add_temp(16 DOWNTO 1);
  Sum6_add_cast_2 <= resize(Delay26_out1_im, 19);
  Sum6_add_cast_3 <= resize(Delay25_out1_im, 19);
  Sum6_add_temp_1 <= Sum6_add_cast_2 + Sum6_add_cast_3;
  
  Sum6_out1_im <= X"7FFF" WHEN (Sum6_add_temp_1(18) = '0') AND (Sum6_add_temp_1(17 DOWNTO 16) /= "00") ELSE
      X"8000" WHEN (Sum6_add_temp_1(18) = '1') AND (Sum6_add_temp_1(17 DOWNTO 16) /= "11") ELSE
      Sum6_add_temp_1(16 DOWNTO 1);

  Delay15_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay15_reg_im(0) <= Sum6_out1_im;
        Delay15_reg_im(1) <= Delay15_reg_im(0);
        Delay15_reg_re(0) <= Sum6_out1_re;
        Delay15_reg_re(1) <= Delay15_reg_re(0);
      END IF;
    END IF;
  END PROCESS Delay15_process;

  Delay15_out1_re <= Delay15_reg_re(1);
  Delay15_out1_im <= Delay15_reg_im(1);

  mu_signed <= signed(mu);

  Delay34_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay34_out1 <= to_signed(16#000#, 11);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay34_out1 <= mu_signed;
      END IF;
    END IF;
  END PROCESS Delay34_process;


  Delay29_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay29_out1 <= to_signed(16#000#, 11);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay29_out1 <= Delay34_out1;
      END IF;
    END IF;
  END PROCESS Delay29_process;


  Delay19_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay19_out1 <= to_signed(16#000#, 11);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay19_out1 <= Delay29_out1;
      END IF;
    END IF;
  END PROCESS Delay19_process;


  Delay24_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay24_out1 <= to_signed(16#000#, 11);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay24_out1 <= Delay19_out1;
      END IF;
    END IF;
  END PROCESS Delay24_process;


  Delay14_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay14_reg(0) <= Delay24_out1;
        Delay14_reg(1) <= Delay14_reg(0);
      END IF;
    END IF;
  END PROCESS Delay14_process;

  Delay14_out1 <= Delay14_reg(1);

  Product1_mul_temp <= Delay15_out1_re * Delay14_out1;
  Product1_out1_re <= Product1_mul_temp(26 DOWNTO 11) + ('0' & (Product1_mul_temp(26) AND (Product1_mul_temp(10) OR Product1_mul_temp(9) OR Product1_mul_temp(8) OR Product1_mul_temp(7) OR Product1_mul_temp(6) OR Product1_mul_temp(5) OR Product1_mul_temp(4) OR Product1_mul_temp(3) OR Product1_mul_temp(2) OR Product1_mul_temp(1) OR Product1_mul_temp(0))));
  Product1_mul_temp_1 <= Delay15_out1_im * Delay14_out1;
  Product1_out1_im <= Product1_mul_temp_1(26 DOWNTO 11) + ('0' & (Product1_mul_temp_1(26) AND (Product1_mul_temp_1(10) OR Product1_mul_temp_1(9) OR Product1_mul_temp_1(8) OR Product1_mul_temp_1(7) OR Product1_mul_temp_1(6) OR Product1_mul_temp_1(5) OR Product1_mul_temp_1(4) OR Product1_mul_temp_1(3) OR Product1_mul_temp_1(2) OR Product1_mul_temp_1(1) OR Product1_mul_temp_1(0))));

  Delay9_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay9_reg_im(0) <= Product1_out1_im;
        Delay9_reg_im(1) <= Delay9_reg_im(0);
        Delay9_reg_re(0) <= Product1_out1_re;
        Delay9_reg_re(1) <= Delay9_reg_re(0);
      END IF;
    END IF;
  END PROCESS Delay9_process;

  Delay9_out1_re <= Delay9_reg_re(1);
  Delay9_out1_im <= Delay9_reg_im(1);

  Sum3_out1_re <= Delay11_out1_re + Delay9_out1_re;
  Sum3_out1_im <= Delay11_out1_im + Delay9_out1_im;

  Delay6_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay6_reg_im(0) <= Sum3_out1_im;
        Delay6_reg_im(1) <= Delay6_reg_im(0);
        Delay6_reg_re(0) <= Sum3_out1_re;
        Delay6_reg_re(1) <= Delay6_reg_re(0);
      END IF;
    END IF;
  END PROCESS Delay6_process;

  Delay6_out1_re <= Delay6_reg_re(1);
  Delay6_out1_im <= Delay6_reg_im(1);

  Delay13_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay13_reg <= (OTHERS => to_signed(16#000#, 11));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay13_reg(0) <= Delay14_out1;
        Delay13_reg(1) <= Delay13_reg(0);
      END IF;
    END IF;
  END PROCESS Delay13_process;

  Delay13_out1 <= Delay13_reg(1);

  Delay7_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay7_reg(0) <= Delay13_out1;
        Delay7_reg(1) <= Delay7_reg(0);
      END IF;
    END IF;
  END PROCESS Delay7_process;

  Delay7_out1 <= Delay7_reg(1);

  Product2_mul_temp <= Delay6_out1_re * Delay7_out1;
  Product2_out1_re <= Product2_mul_temp(25 DOWNTO 10) + ('0' & (Product2_mul_temp(26) AND (Product2_mul_temp(9) OR Product2_mul_temp(8) OR Product2_mul_temp(7) OR Product2_mul_temp(6) OR Product2_mul_temp(5) OR Product2_mul_temp(4) OR Product2_mul_temp(3) OR Product2_mul_temp(2) OR Product2_mul_temp(1) OR Product2_mul_temp(0))));
  Product2_mul_temp_1 <= Delay6_out1_im * Delay7_out1;
  Product2_out1_im <= Product2_mul_temp_1(25 DOWNTO 10) + ('0' & (Product2_mul_temp_1(26) AND (Product2_mul_temp_1(9) OR Product2_mul_temp_1(8) OR Product2_mul_temp_1(7) OR Product2_mul_temp_1(6) OR Product2_mul_temp_1(5) OR Product2_mul_temp_1(4) OR Product2_mul_temp_1(3) OR Product2_mul_temp_1(2) OR Product2_mul_temp_1(1) OR Product2_mul_temp_1(0))));

  Delay_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay_reg_im(0) <= Product2_out1_im;
        Delay_reg_im(1) <= Delay_reg_im(0);
        Delay_reg_re(0) <= Product2_out1_re;
        Delay_reg_re(1) <= Delay_reg_re(0);
      END IF;
    END IF;
  END PROCESS Delay_process;

  Delay_out1_re <= Delay_reg_re(1);
  Delay_out1_im <= Delay_reg_im(1);

  Sum2_add_cast <= resize(Delay5_out1_re, 19);
  Sum2_add_cast_1 <= resize(Delay_out1_re & '0' & '0', 19);
  Sum2_out1_re <= Sum2_add_cast + Sum2_add_cast_1;
  Sum2_add_cast_2 <= resize(Delay5_out1_im, 19);
  Sum2_add_cast_3 <= resize(Delay_out1_im & '0' & '0', 19);
  Sum2_out1_im <= Sum2_add_cast_2 + Sum2_add_cast_3;

  interpolant_re <= std_logic_vector(Sum2_out1_re);

  interpolant_im <= std_logic_vector(Sum2_out1_im);

END rtl;

