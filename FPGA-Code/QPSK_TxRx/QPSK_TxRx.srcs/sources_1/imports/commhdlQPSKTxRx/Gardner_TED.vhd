-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\commhdlQPSKTxRx\Gardner_TED.vhd
-- Created: 2024-01-25 16:33:03
-- 
-- Generated by MATLAB 23.2, HDL Coder 23.2, and Simulink 23.2
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Gardner_TED
-- Source Path: commhdlQPSKTxRx/QPSK Rx/Frequency and Time Synchronizer/Symbol Synchronizer/Gardner TED
-- Hierarchy Level: 3
-- Model version: 7.26
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY Gardner_TED IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        data_re                           :   IN    std_logic_vector(18 DOWNTO 0);  -- sfix19_En12
        data_im                           :   IN    std_logic_vector(18 DOWNTO 0);  -- sfix19_En12
        strobe                            :   IN    std_logic;
        e                                 :   OUT   std_logic_vector(39 DOWNTO 0)  -- sfix40_En24
        );
END Gardner_TED;


ARCHITECTURE rtl OF Gardner_TED IS

  -- Component Declarations
  COMPONENT GTED
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1_re                          :   IN    std_logic_vector(18 DOWNTO 0);  -- sfix19_En12
          In1_im                          :   IN    std_logic_vector(18 DOWNTO 0);  -- sfix19_En12
          Out1                            :   OUT   std_logic_vector(39 DOWNTO 0)  -- sfix40_En24
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : GTED
    USE ENTITY work.GTED(rtl);

  -- Signals
  SIGNAL Delay10_reg                      : std_logic_vector(3 DOWNTO 0);  -- ufix1 [4]
  SIGNAL Delay10_out1                     : std_logic;
  SIGNAL Constant_out1                    : signed(39 DOWNTO 0);  -- sfix40_En24
  SIGNAL GTED_out1                        : std_logic_vector(39 DOWNTO 0);  -- ufix40
  SIGNAL GTED_out1_signed                 : signed(39 DOWNTO 0);  -- sfix40_En24
  SIGNAL Switch_out1                      : signed(39 DOWNTO 0);  -- sfix40_En24

BEGIN
  u_GTED : GTED
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1_re => data_re,  -- sfix19_En12
              In1_im => data_im,  -- sfix19_En12
              Out1 => GTED_out1  -- sfix40_En24
              );

  Delay10_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay10_reg <= (OTHERS => '0');
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay10_reg(0) <= strobe;
        Delay10_reg(3 DOWNTO 1) <= Delay10_reg(2 DOWNTO 0);
      END IF;
    END IF;
  END PROCESS Delay10_process;

  Delay10_out1 <= Delay10_reg(3);

  Constant_out1 <= to_signed(0, 40);

  GTED_out1_signed <= signed(GTED_out1);

  
  Switch_out1 <= Constant_out1 WHEN Delay10_out1 = '0' ELSE
      GTED_out1_signed;

  e <= std_logic_vector(Switch_out1);

END rtl;

